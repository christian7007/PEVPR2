/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

import org.math.plot.Plot2DPanel;

import Controlers.MainControler;
import Models.Chromosome;
import Models.LetterFrequency;

/**
 *
 * @author al3x_hh
 */
public class MainView extends javax.swing.JFrame implements Observer {

	private MainControler controller;

	/**
	 * Creates new form MainView
	 */
	public MainView() {
		frequencies = loadNGrams();
		initComponents();

		controller = new MainControler();
		controller.setObserver(this);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		this.setTitle("Practise 2");
		this.setPreferredSize(new Dimension(1200, 580));
		this.setResizable(false);

		jLabel1 = new javax.swing.JLabel();
		populationSizeTF = new javax.swing.JTextField();
		jLabel11 = new javax.swing.JLabel();
		jLabel12 = new javax.swing.JLabel();
		jLabel13 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		generationNumberTF = new javax.swing.JTextField();
		nTF = new javax.swing.JTextField();
		truncTF = new javax.swing.JTextField();
		kTF = new javax.swing.JTextField();
		jLabel3 = new javax.swing.JLabel();
		selectionModeCB = new javax.swing.JComboBox<>();
		jPanel1 = new javax.swing.JPanel();
		jLabel4 = new javax.swing.JLabel();
		crossoverModeCB = new javax.swing.JComboBox<>();
		jLabel5 = new javax.swing.JLabel();
		crossoverTF = new javax.swing.JTextField();
		jPanel2 = new javax.swing.JPanel();
		jLabel6 = new javax.swing.JLabel();
		mutationTF = new javax.swing.JTextField();
		jLabel7 = new javax.swing.JLabel();
		mutationModeCB = new javax.swing.JComboBox<>();
		jPanel3 = new javax.swing.JPanel();
		eliteTF = new javax.swing.JTextField();
		jLabel8 = new javax.swing.JLabel();
		resetFieldsB = new javax.swing.JButton();
		runB = new javax.swing.JButton();
		jLabel9 = new javax.swing.JLabel();
		openFileChooser = new javax.swing.JButton("Select");
		chartP = new Plot2DPanel();
		jPanel6 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		decipheredTA = new javax.swing.JTextArea();
		fileContent = "";
		openFileChooser.setBackground(Color.red);

		// DEFAULTS VALUES
		populationSizeTF.setText("50");
		generationNumberTF.setText("100");
		crossoverTF.setText("0.65");
		mutationTF.setText("0.2");
		eliteTF.setText("0.15");

		// define the legend position
		chartP.addLegend("SOUTH");

		openFileChooser.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				openFileChooser.setBackground(Color.green);
				JFileChooser fileChooser = new JFileChooser();
				fileChooser.showOpenDialog(openFileChooser);
				File file = fileChooser.getSelectedFile();
				fileContent = "";

				BufferedReader br = null;
				FileReader fr = null;

				try {

					fr = new FileReader(file.getPath());
					br = new BufferedReader(fr);

					String sCurrentLine;

					while ((sCurrentLine = br.readLine()) != null) {
						fileContent += sCurrentLine + " ";
					}

					fileContent = fileContent.replaceAll("\\.", "");
					fileContent = fileContent.replaceAll("\\,", "");
					fileContent = fileContent.replaceAll("\\'", "");
					fileContent = fileContent.replaceAll("\\\"", "");
					fileContent = fileContent.replaceAll("\\(", "");
					fileContent = fileContent.replaceAll("\\)", "");
					fileContent = fileContent.replaceAll("\\;", "");
					fileContent = fileContent.replaceAll("\\-", "");
					fileContent = fileContent.replaceAll("\\?", "");
					
					frequencies.calculateFrequencies(fileContent);

				} catch (IOException ex) {
					ex.printStackTrace();
				} finally {

					try {

						if (br != null)
							br.close();

						if (fr != null)
							fr.close();

					} catch (IOException ex) {
						ex.printStackTrace();
					}

				}
			}
		});

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setPreferredSize(new java.awt.Dimension(1200, 610));

		jLabel1.setText("Population size:");

		jLabel11.setText("N: ");
		jLabel11.setVisible(false);
		nTF.setVisible(false);

		jLabel12.setText("Trunc: ");
		jLabel12.setVisible(false);
		truncTF.setVisible(false);

		jLabel13.setText("K/N: ");
		jLabel13.setVisible(false);
		kTF.setVisible(false);

		jLabel2.setText("Generation number:");

		jLabel3.setText("Selection:");

		selectionModeCB.setModel(new javax.swing.DefaultComboBoxModel<>(
				new String[] { "Roulette", "Tournament", "Universal stochastic", "Truncation", "Rests" }));

		jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Crossover"));
		jPanel1.setToolTipText("");

		jLabel4.setText("CrossoverB:");

		crossoverModeCB.setModel(new javax.swing.DefaultComboBoxModel<>(
				new String[] { "Ordinal", "PBX", "Point crossover", "PMX", "Uniform crossover" }));

		jLabel5.setText("Crossover %:");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jLabel4).addComponent(jLabel5).addComponent(jLabel13))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(crossoverModeCB, 0, 120, Short.MAX_VALUE).addComponent(crossoverTF)
								.addComponent(kTF))
						.addContainerGap()));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel4).addComponent(crossoverModeCB,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel5).addComponent(crossoverTF, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel13).addComponent(kTF, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Mutation"));
		jPanel2.setToolTipText("");

		jLabel6.setText("MutationB:");

		jLabel7.setText("Mutation %:");

		mutationModeCB.setModel(new javax.swing.DefaultComboBoxModel<>(
				new String[] { "Inserction", "Exchange", "Inversion", "Heuristic" }));

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jLabel6).addComponent(jLabel7))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(mutationModeCB, 0, 120, Short.MAX_VALUE).addComponent(mutationTF))
						.addContainerGap()));
		jPanel2Layout
				.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel6)
								.addComponent(mutationModeCB, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jLabel7).addComponent(mutationTF,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addContainerGap()));

		jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Elite"));
		jPanel3.setToolTipText("");

		eliteTF.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jTextField5ActionPerformed(evt);
			}
		});

		jLabel8.setText("Elite %:");

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addComponent(jLabel8)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(eliteTF, javax.swing.GroupLayout.PREFERRED_SIZE, 120,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap()));
		jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
						.addGap(0, 0, Short.MAX_VALUE)
						.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel8).addComponent(eliteTF, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))));

		resetFieldsB.setText("Reset fields");
		resetFieldsB.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// DEFAULTS VALUES
				populationSizeTF.setText("50");
				generationNumberTF.setText("100");
				crossoverTF.setText("0.65");
				mutationTF.setText("0.2");
				eliteTF.setText("0.15");
			}
		});

		runB.setText("Run");
		runB.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				if (populationSizeTF.getText().equals("") || generationNumberTF.getText().equals("")
						|| crossoverTF.getText().equals("") || mutationTF.getText().equals("")
						|| eliteTF.getText().equals("") || fileContent.equals("")) {
					JOptionPane.showMessageDialog(null, "You must introduce all the paramaters", "Error",
							JOptionPane.ERROR_MESSAGE);
				} else {
					try {
						controller.run(Integer.parseInt(populationSizeTF.getText()),
								Integer.parseInt(generationNumberTF.getText()),
								selectionModeCB.getSelectedItem().toString(),
								selectionModeCB.getSelectedItem().toString().equals("Truncation")
										? Double.parseDouble(truncTF.getText().toString())
										: 0.0,
								crossoverModeCB.getSelectedItem().toString(), Double.parseDouble(crossoverTF.getText()),
								crossoverModeCB.getSelectedItem().toString().equals("PBX")
										? Integer.parseInt(kTF.getText())
										: 0,
								mutationModeCB.getSelectedItem().toString(), Double.parseDouble(mutationTF.getText()),
								Double.parseDouble(eliteTF.getText()), fileContent.toUpperCase(), frequencies);
					} catch (NumberFormatException e1) {
						JOptionPane.showMessageDialog(null, "Munber format exception", "Error",
								JOptionPane.ERROR_MESSAGE);
					}
				}
			}
		});

		jLabel9.setText("File:");

		selectionModeCB.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				if (selectionModeCB.getSelectedItem().toString().equals("Truncation") ||
						selectionModeCB.getSelectedItem().toString().equals("Tournament") ||
						selectionModeCB.getSelectedItem().toString().equals("Rests")) {
					jLabel12.setVisible(true);
					truncTF.setVisible(true);
				} else {
					jLabel12.setVisible(false);
					truncTF.setVisible(false);
				}
			}
		});

		crossoverModeCB.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				if (crossoverModeCB.getSelectedItem().toString().equals("PBX")) {
					jLabel13.setVisible(true);
					kTF.setVisible(true);
				} else {
					jLabel13.setVisible(false);
					kTF.setVisible(false);
				}
			}
		});

		mutationModeCB.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				if (crossoverModeCB.getSelectedItem().toString().equals("Heuristic")) {
					jLabel13.setVisible(true);
					kTF.setVisible(true);
				} else {
					jLabel13.setVisible(false);
					kTF.setVisible(false);
				}
			}
		});

		/*
		 * chartP.setBorder(javax.swing.BorderFactory.createTitledBorder("Chart"));
		 * 
		 * javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
		 * jPanel4.setLayout(jPanel4Layout); jPanel4Layout.setHorizontalGroup(
		 * jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		 * .addGap(0, 899, Short.MAX_VALUE) ); jPanel4Layout.setVerticalGroup(
		 * jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		 * .addGap(0, 0, Short.MAX_VALUE) );
		 */

		javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
		jPanel6.setLayout(jPanel6Layout);
		jPanel6Layout
				.setHorizontalGroup(
						jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel6Layout.createSequentialGroup().addContainerGap()
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addContainerGap()));

		decipheredTA.setEditable(false);
		decipheredTA.setColumns(20);
		decipheredTA.setRows(5);
		decipheredTA.setBorder(javax.swing.BorderFactory.createTitledBorder("Deciphered text"));
		jScrollPane1.setViewportView(decipheredTA);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(19, 19, 19)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addGroup(layout.createSequentialGroup()
										.addComponent(resetFieldsB, javax.swing.GroupLayout.PREFERRED_SIZE, 130,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(18, 18, 18)
										.addComponent(runB, javax.swing.GroupLayout.PREFERRED_SIZE, 130,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(
										jPanel3, javax.swing.GroupLayout.Alignment.TRAILING,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addGroup(layout.createSequentialGroup().addGap(8, 8, 8)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jLabel2).addComponent(jLabel3).addComponent(jLabel1)
												.addComponent(jLabel11).addComponent(jLabel12).addComponent(jLabel9))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
												.addComponent(generationNumberTF).addComponent(openFileChooser)
												.addComponent(populationSizeTF)
												.addComponent(selectionModeCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE)
												.addComponent(nTF).addComponent(truncTF).addComponent(openFileChooser,
														javax.swing.GroupLayout.Alignment.LEADING,
														javax.swing.GroupLayout.PREFERRED_SIZE, 104,
														javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addGap(22, 22, 22)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(chartP, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jScrollPane1))
						.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addGroup(layout.createSequentialGroup().addContainerGap()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel9)
												.addComponent(openFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel1).addComponent(populationSizeTF,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel2).addComponent(generationNumberTF,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel3).addComponent(selectionModeCB,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel11).addComponent(nTF,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel12)
												.addComponent(truncTF, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(18, 18, 18)
										.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addComponent(chartP, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addGroup(layout.createSequentialGroup()
										.addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(26, 26, 26)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(resetFieldsB).addComponent(runB)))
								.addComponent(jScrollPane1))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextField5ActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jTextField5ActionPerformed

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MainView().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton resetFieldsB;
	private javax.swing.JButton runB;
	private javax.swing.JComboBox<String> selectionModeCB;
	private javax.swing.JComboBox<String> crossoverModeCB;
	private javax.swing.JComboBox<String> mutationModeCB;
	private javax.swing.JButton openFileChooser;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel11;
	private javax.swing.JLabel jLabel12;
	private javax.swing.JLabel jLabel13;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private Plot2DPanel chartP;
	private javax.swing.JPanel jPanel6;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTextArea decipheredTA;
	private javax.swing.JTextField populationSizeTF;
	private javax.swing.JTextField generationNumberTF;
	private javax.swing.JTextField nTF;
	private javax.swing.JTextField truncTF;
	private javax.swing.JTextField kTF;
	private javax.swing.JTextField crossoverTF;
	private javax.swing.JTextField mutationTF;
	private javax.swing.JTextField eliteTF;
	private String fileContent;
	private LetterFrequency frequencies;
	// End of variables declaration//GEN-END:variables

	@Override
	public void updatePlot(double[] mean, double[] bestGeneration, double[] best, int generations, Chromosome result) {
		double[] x = new double[generations];

		for (int i = 0; i < generations; i++)
			x[i] = i + 1;

		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				decipheredTA.setText(result.getPhenotype());
				chartP.removeAllPlots();
				chartP.addLinePlot("Absolute best", x, best);
				chartP.addLinePlot("Generation best", x, bestGeneration);
				chartP.addLinePlot("Generation mean", x, mean);
			}
		});
	}

	private static final String FILENAMEMONO = System.getProperty("user.dir") + "/data/english_monograms.txt";
	private static final String FILENAMEBI = System.getProperty("user.dir") + "/data/english_bigrams.txt";
	private static final String FILENAMETRI = System.getProperty("user.dir") + "/data/english_trigrams.txt";

	private LetterFrequency loadNGrams() {
		BufferedReader br = null;
		FileReader fr = null;
		LetterFrequency ret = new LetterFrequency();
		int mono = 0, bi = 0, tri = 0;

		try {

			fr = new FileReader(FILENAMEMONO);
			br = new BufferedReader(fr);

			String sCurrentLine;

			while ((sCurrentLine = br.readLine()) != null) {
				ret.setFrequencies(sCurrentLine.split(" ")[0], Double.valueOf(sCurrentLine.split(" ")[1]), "MONO");
				mono += Integer.valueOf(sCurrentLine.split(" ")[1]);
			}

			for (String key : ret.getFrequencies1().keySet()) {
				ret.setFrequencies(key, (double) ret.getFrequencies1().get(key) / mono, "MONO");
			}

			fr = new FileReader(FILENAMEBI);
			br = new BufferedReader(fr);

			while ((sCurrentLine = br.readLine()) != null) {
				ret.setFrequencies(sCurrentLine.split(" ")[0], Double.valueOf(sCurrentLine.split(" ")[1]), "BI");
				bi += Integer.valueOf(sCurrentLine.split(" ")[1]);
			}

			for (String key : ret.getFrequencies2().keySet()) {
				ret.setFrequencies(key, (double) ret.getFrequencies2().get(key) / bi, "BI");
			}

			fr = new FileReader(FILENAMETRI);
			br = new BufferedReader(fr);

			while ((sCurrentLine = br.readLine()) != null) {
				ret.setFrequencies(sCurrentLine.split(" ")[0], Double.valueOf(sCurrentLine.split(" ")[1]), "TRI");
				tri += Integer.valueOf(sCurrentLine.split(" ")[1]);
			}

			for (String key : ret.getFrequencies3().keySet()) {
				ret.setFrequencies(key, (double) ret.getFrequencies3().get(key) / tri, "TRI");
			}

		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				if (br != null)
					br.close();
				if (fr != null)
					fr.close();
			} catch (IOException ex) {
				ex.printStackTrace();
			}
		}

		return ret;
	}
}
